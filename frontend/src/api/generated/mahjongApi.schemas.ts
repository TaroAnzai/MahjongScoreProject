/**
 * Generated by orval v7.13.0 üç∫
 * Do not edit manually.
 * Task Progress API (Dev)
 * OpenAPI spec version: 1.0.0
 */
/**
 * Errors
 */
export type ErrorErrors = {[key: string]: unknown};

export interface Error {
  /** Error code */
  code?: number;
  /** Error name */
  status?: string;
  /** Error message */
  message?: string;
  /** Errors */
  errors?: ErrorErrors;
}

export interface PaginationMetadata {
  total?: number;
  total_pages?: number;
  first_page?: number;
  last_page?: number;
  page?: number;
  previous_page?: number;
  next_page?: number;
}

export interface Tournament {
  readonly id?: number;
  name: string;
  /** @nullable */
  description?: string | null;
  readonly created_at?: string;
}

export interface TournamentCreate {
  name: string;
  /** @nullable */
  description?: string | null;
}

export interface PlayerScore {
  id: number;
  name: string;
  total_score: number;
  games_played: number;
}

export interface Group {
  id: number;
  name: string;
  players?: PlayerScore[];
}

export type TournamentResultTournament = {[key: string]: unknown};

export interface TournamentResult {
  tournament?: TournamentResultTournament;
  groups?: Group[];
}

export interface ScoreSummaryPlayer {
  id: number;
  name: string;
}

export type ScoreSummaryTableScores = {[key: string]: number};

export interface ScoreSummaryTable {
  name: string;
  scores?: ScoreSummaryTableScores;
}

export interface ScoreSummary {
  players?: ScoreSummaryPlayer[];
  tables?: ScoreSummaryTable[];
}

export interface Group1 {
  readonly id?: number;
  name: string;
  /** @nullable */
  description?: string | null;
  readonly group_key?: string;
  readonly edit_key?: string;
  readonly created_at?: string;
}

export interface GroupCreate {
  name: string;
  /** @nullable */
  description?: string | null;
}

export interface GroupUpdate {
  name?: string;
  description?: string;
}

export interface PlayerResponse {
  readonly id?: number;
  name: string;
  group_id: number;
}

export interface PlayerCreate {
  group_id: number;
  name: string;
}

export interface Message {
  message: string;
}

export interface TableBase {
  readonly id?: number;
  name: string;
  tournament_id: number;
  readonly type?: string;
  readonly table_key?: string;
  readonly edit_key?: string;
}

export interface TableCreate {
  name: string;
  tournament_id: number;
  player_ids?: number[];
}

export interface Player {
  id?: number;
  name?: string;
  nickname?: string;
}

export interface Message1 {
  message: string;
}

export interface Score {
  player_id: number;
  score: number;
}

export interface GameResponse {
  game_id: number;
  scores?: Score[];
}

export interface GameCreate {
  scores: Score[];
  /** @nullable */
  memo?: string | null;
}

export interface TableWithPlayers {
  table?: TableBase;
  players?: Player[];
}

export interface TableUpdate {
  name?: string;
  type?: string;
  description?: string;
}

export interface GameUpdate {
  /** @nullable */
  memo?: string | null;
  /** @nullable */
  played_at?: string | null;
  scores?: Score[];
}

export interface Message2 {
  message: string;
}

export interface LoginByKey {
  edit_key: string;
  type: string;
}

export interface Message3 {
  message: string;
}

/**
 * Default error response
 */
export type DefaultErrorResponse = Error;

/**
 * Unprocessable Entity
 */
export type UnprocessableEntityResponse = Error;

export type GetApiTablesParams = {
/**
 * get table by Table Key
 */
key?: number;
/**
 * get tables by Tournament ID
 */
tournament_id?: number;
};

